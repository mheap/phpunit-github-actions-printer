name: CI
on:
  push: {}
  pull_request:
    types: [opened, reopened, synchronize]
jobs:
  run:
    env:
      ACTIONS_STEP_DEBUG: true
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        php-versions: ["7.3", "7.4"]
        phpunit-version: ["6", "7", "8", "9"]
    name: PHP ${{ matrix.php-versions }} Test on ${{ matrix.os }} (PHPUnit ${{ matrix.phpunit-version }})
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring
          coverage: xdebug2

      - name: Set PHPUnit Version
        run: |
          $content = Get-Content -Path 'composer.json' | ConvertFrom-Json
          $content.{require-dev}.{phpunit/phpunit} = "^${{ matrix.phpunit-version }}"
          $content | ConvertTo-Json  | Set-Content -Path 'composer.json'
        shell: pwsh

      - name: Composer dependencies
        run: composer install --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: Set correct phpt file name
        id: phpt-filename
        run: |
          If (${{matrix.phpunit-version}} -eq 6) {
            '##[set-output name=version;]-phpunit6'
          } Else {
            '##[set-output name=version;]'
          }
        shell: pwsh

      - name: Configure tests for the current PHPUnit version
        run: |
          $V = (.\vendor\bin\phpunit --version | Out-String).trim()
          $content = Get-Content -Path 'test/states-test${{ steps.phpt-filename.outputs.version}}.phpt'
          $newContent = $content -replace '%%VERSION%%', $V
          $newContent | Set-Content -Path 'test/states-test${{ steps.phpt-filename.outputs.version}}.phpt'
        shell: pwsh

      - name: Run phpunit
        run: ./vendor/bin/phpunit

      - name: Run phpcs
        run: ./vendor/bin/phpcs
